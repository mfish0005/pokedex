@import '../../styles/fish-styles/all.scss';

.fish-badge {
  align-items: center;
  justify-content: center;
  text-align: center;
  white-space: nowrap;
  border: 1px solid transparent;
  border-radius: 0.375rem;
  transition: all 0.2s ease-in-out;
  
  /* Sizes */
  &--small {
    padding: 0.125rem 0.375rem;
    min-height: 1.25rem;
  }
  
  &--medium {
    padding: 0.25rem 0.5rem;
    min-height: 1.5rem;
  }
  
  &--large {
    padding: 0.375rem 0.75rem;
    min-height: 2rem;
  }
  
  /* Filled Variants */
  &--primary:not(.fish-badge--outline) {
    @include button-solid-variant($primary, "green-dark");
    // Override border since it's a badge, not button
    border-color: $primary;
  }
  
  &--secondary:not(.fish-badge--outline) {
    background-color: $gray;
    color: map-get($colorMap, "white");
  }
  
  &--success:not(.fish-badge--outline) {
    background-color: $success;
    color: map-get($colorMap, "white");
  }
  
  &--warning:not(.fish-badge--outline) {
    background-color: $warning;
    color: map-get($colorMap, "white");
  }
  
  &--danger:not(.fish-badge--outline) {
    background-color: $danger;
    color: map-get($colorMap, "white");
  }
  
  &--info:not(.fish-badge--outline) {
    background-color: $info;
    color: map-get($colorMap, "white");
  }
  
  /* Outline Variants */
  &--primary.fish-badge--outline {
    background-color: transparent;
    color: $primary;
    border-color: $primary;
  }
  
  &--secondary.fish-badge--outline {
    background-color: transparent;
    color: $gray;
    border-color: $gray;
  }
  
  &--success.fish-badge--outline {
    background-color: transparent;
    color: $success;
    border-color: $success;
  }
  
  &--warning.fish-badge--outline {
    background-color: transparent;
    color: $warning;
    border-color: $warning;
  }
  
  &--danger.fish-badge--outline {
    background-color: transparent;
    color: $danger;
    border-color: $danger;
  }
  
  &--info.fish-badge--outline {
    background-color: transparent;
    color: $info;
    border-color: $info;
  }
  
  /* Rounded Variant */
  &--rounded {
    border-radius: 9999px;
  }
}
